setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,"90",sep = ""),rowNames=TRUE)
##### Iteracion de la Correlacion
#   Deforestacion - Urbano 90
b1 <- deforestacion
b2 <- nbiPoli90
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Urbano"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
# Influencia de x en y (Indicador en NBI):
# head(ii$SCI[,"lsci.xy"]) # accessing the result
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,"90",sep = ""),rowNames=TRUE)
##### Iteracion de la Correlacion
#   Deforestacion - Rural 90
b1 <- deforestacion
b2 <- nbiPoli90
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Rural"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
# Influencia de x en y (Indicador en NBI):
# head(ii$SCI[,"lsci.xy"]) # accessing the result
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,"90",sep = ""),rowNames=TRUE)
##### Iteracion de la Correlacion
#   Deforestacion - Total 01
b1 <- deforestacion
b2 <- nbiPoli01
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Total"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
# Influencia de x en y (Indicador en NBI):
# head(ii$SCI[,"lsci.xy"]) # accessing the result
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,"01",sep = ""),rowNames=TRUE)
##### Iteracion de la Correlacion
#   Deforestacion - Urbano 01
b1 <- deforestacion
b2 <- nbiPoli01
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Urbano"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
# Influencia de x en y (Indicador en NBI):
# head(ii$SCI[,"lsci.xy"]) # accessing the result
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,"01",sep = ""),rowNames=TRUE)
##### Iteracion de la Correlacion
#   Deforestacion - Urbano 01
b1 <- deforestacion
b2 <- nbiPoli01
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Rural"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p)
)
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
# Influencia de x en y (Indicador en NBI):
# head(ii$SCI[,"lsci.xy"]) # accessing the result
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,"01",sep = ""),rowNames=TRUE)
b1 <- deforestacion
b2 <- IPA_FRIF_92_97
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Pr_IPA_92_"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
setwd(dir.results)
solCross
paste(var1,var2,sep = "")
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,sep = ""),rowNames=TRUE)
b1 <- deforestacion
b2 <- IPA_FRIF_92_97
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Pr_FRIF_92"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
setwd(dir.results)
solCross
paste(var1,var2,sep = "")
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,sep = ""),rowNames=TRUE)
b1 <- deforestacion
b2 <- IPA_FRIF_98_00
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Pr_IPA_98_"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
solCross
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,sep = ""),rowNames=TRUE)
b1 <- deforestacion
b2 <- IPA_FRIF_98_00
names(b1)
names(b2)
var1 <- "P_DEF"
var2 <- "Pr_FRIF_98"
fil <- (b1$DPA_CANTON %in% b2$DPA_CANTON)
table(fil)
b1 <- subset(b1,fil)
fil1 <- (b2$DPA_CANTON %in% b1$DPA_CANTON)
table(fil1)
b2 <- subset(b2,fil1)
cont.nb <- poly2nb(b2)
cont.mat <- nb2mat(cont.nb,zero.policy = TRUE) # W matrix converted to class matrix
x1 <- as.numeric(unlist(b1[,var1]@data ))
x2 <- as.numeric(unlist(b2[,var2]@data ))
# version with matrix W
ii<-crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=TRUE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
iii <- crossCorrelation(x1, x2, w=cont.mat, type=c("LSCI", "GSCI"), k=999,
scale.xy=FALSE, scale.partial=TRUE, scale.matrix=TRUE, alpha=0.05)
pear <- cor.test(x1,x2) # Pearson correlation
spear <- cor.test(x1,x2,method = "spearman") # Pearson correlation
solCross <- rbind(c(pear$estimate,pear$p.value),
c(spear$estimate,spear$p.value),
c(ii$I,ii$global.p),
c(iii$I,iii$global.p))
colnames(solCross) <- c("Valor","p valor")
rownames(solCross) <- c("Pearson",
"Spearman",
"Moran",
"Moran*")
setwd(dir.results)
rio::export(solCross, file = "CrossCorrelaciones.xlsx",
which = paste(var1,var2,sep = ""),rowNames=TRUE)
version
shiny::runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
?hcmap
?color_classes
?hc_colorAxis
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp()
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp()
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
?reactive
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
?DT::dataTableOutput
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
?vegdist
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
runApp('~/Documents/ShinyApps/TempClus/App')
shiny::runApp()
runApp()
runApp()
mapdata <- get_data_from_map(download_map_data("custom/world-palestine-highres"))
?get_data_from_map
install.packages("highcharter")
install.packages("highcharter")
mapdata <- get_data_from_map(download_map_data("custom/world-palestine-highres"))
library(highcharter)
mapdata <- get_data_from_map(download_map_data("custom/world-palestine-highres"))
?get_data_from_map
dta <- download_map_data("https://code.highcharts.com/mapdata/countries/us/us-ca-all.js")
get_data_from_map(dta)
dta <- download_map_data("https://code.highcharts.com/mapdata/countries/us/us-ca-all.js")
mapdata <- get_data_from_map(download_map_data("custom/world-palestine-highres"))
get_data_from_map
# mapdata <- get_data_from_map(download_map_data("custom/world-palestine-highres"))
load("data/mapdata.RData")
mapdata <- get_data_from_map(download_map_data("custom/world-palestine-highres"))
get_data_from_map
download_map_data
download_map_data()
url = "custom/world.js";showinfo = FALSE;quiet = FALSE
url <- sprintf("https://code.highcharts.com/mapdata/%s",
fix_map_name(url))
library(highcharter)
url = "custom/world.js";showinfo = FALSE;quiet = FALSE
url <- sprintf("https://code.highcharts.com/mapdata/%s",
fix_map_name(url))
?fix_map_name
fix_map_name <- function(x = "custom/world") {
x <- stringr::str_replace(x, "\\.js$", "")
x <- stringr::str_replace(x, "https://code\\.highcharts\\.com/mapdata/", "")
x <- sprintf("%s.js", x)
x
}
url <- sprintf("https://code.highcharts.com/mapdata/%s",
fix_map_name(url))
tmpfile <- tempfile(fileext = ".js")
download.file(url, tmpfile, quiet = quiet)
mapdata <- readLines(tmpfile, warn = FALSE, encoding = "UTF-8")
mapdata[1] <- gsub(".* = ", "", mapdata[1])
mapdata <- paste(mapdata, collapse = "\n")
mapdata <- jsonlite::fromJSON(mapdata, simplifyVector = FALSE)
mapdata
mapdata <- jsonlite::fromJSON(mapdata, simplifyVector = FALSE)
mapdata
gsub(";", "", mapdata[1])
mapdata <- gsub(";", "", mapdata[1])
mapdata <- jsonlite::fromJSON(mapdata, simplifyVector = FALSE)
shiny::runApp()
runApp()
mapdata <- get_data_from_map(download_map_data1("custom/world-palestine-highres"))
fix_map_name <- function(x = "custom/world") {
x <- stringr::str_replace(x, "\\.js$", "")
x <- stringr::str_replace(x, "https://code\\.highcharts\\.com/mapdata/", "")
x <- sprintf("%s.js", x)
x
}
download_map_data1 <- function (url = "custom/world.js", showinfo = FALSE, quiet = FALSE)
{
url = "custom/world.js";showinfo = FALSE;quiet = FALSE
url <- sprintf("https://code.highcharts.com/mapdata/%s",
fix_map_name(url))
tmpfile <- tempfile(fileext = ".js")
download.file(url, tmpfile, quiet = quiet)
mapdata <- readLines(tmpfile, warn = FALSE, encoding = "UTF-8")
mapdata[1] <- gsub(".* = ", "", mapdata[1])
mapdata <- paste(mapdata, collapse = "\n")
mapdata <- gsub(";", "", mapdata[1])
mapdata <- jsonlite::fromJSON(mapdata, simplifyVector = FALSE)
if (showinfo) {
glimpse(get_data_from_map(mapdata))
}
mapdata
}
mapdata <- get_data_from_map(download_map_data1("custom/world-palestine-highres"))
mapdata$`iso-a3`
apdata %>%
select(PROVINCIA = `iso-a3`) %>% arrange(PROVINCIA)%>%
mutate(X = 1:215,Cat = dfVal$Cat)
mapdata %>%
select(PROVINCIA = `iso-a3`) %>% arrange(PROVINCIA)%>%
mutate(X = 1:215,Cat = dfVal$Cat)
mapdata
mapdata %>%
select(PROVINCIA = `iso-a3`)
mapdata %>%
select(PROVINCIA = `iso-a3`) %>% arrange(PROVINCIA)
dfVal$Cat
View(mapdata %>%
select(PROVINCIA = `iso-a3`) %>% arrange(PROVINCIA))
View(mapdata %>%
select(PROVINCIA = `iso-a3`) %>% arrange(PROVINCIA))
mapdata %>%
select(PROVINCIA = `iso-a3`) %>% arrange(PROVINCIA)%>%
mutate(X = 1:215)
mapdata %>%
select(PROVINCIA = `iso-a3`) %>% arrange(PROVINCIA)%>%
mutate(X = 1:213
)
runApp()
runApp()
mapdata <- get_data_from_map(download_map_data1("custom/world-palestine-highres"))
